{"title":"Data Sources","markdown":{"headingText":"Data Sources","containsRefs":false,"markdown":"\nThis project integrates four primary data sources spanning 1980-2025, providing comprehensive coverage of NBA team performance, shot-level spatial data, and financial market dynamics. All data collection methods are documented below.\n---\n\n## 1. Basketball Reference: Team Advanced Statistics (1980-2025)\n\n### Source Information\n- **Primary Source**: [Basketball-Reference.com](https://www.basketball-reference.com/)\n- **Direct URL Pattern**: `https://www.basketball-reference.com/leagues/NBA_[YEAR].html`\n  - Example: [2023-24 Advanced Stats](https://www.basketball-reference.com/leagues/NBA_2024.html)\n- **Coverage**: 45 seasons (1980-81 through 2024-25)\n- **Format**: CSV files\n\n### Extraction Method\n\nData was collected via manual download:\n\n1. Navigate to the season page (e.g., `https://www.basketball-reference.com/leagues/NBA_2024.html`)\n2. Scroll to \"Team Per Game Stats\" or \"Advanced Stats\" table\n3. Click **\"Share & Export\"** → **\"Get table as CSV (for Excel)\"**\n4. Save the exported HTML file, then convert to CSV\n5. Repeat for all 45 seasons (1980-81 through 2024-25) \n\n**Data Processing**:\nDownloaded HTML tables were converted to CSV format using a Python script that:\n\n- Reads HTML tables using `pandas.read_html()`\n- Handles multi-level column names\n- Exports clean CSV files\n\n### Data Dictionary\n\n**Key Variables** (31 total columns):\n\n| Variable | Description | Relevance to Time-Series Analysis |\n|----------|-------------|-----------------------------------|\n| `Team` | Team name | Identifier |\n| `W`, `L` | Wins, Losses | Win rate time series by season |\n| `ORtg` | Offensive Rating (pts per 100 possessions) | **Primary dependent variable** for efficiency evolution |\n| `DRtg` | Defensive Rating (pts allowed per 100 poss) | Defensive efficiency trends |\n| `NRtg` | Net Rating (ORtg - DRtg) | Overall team quality metric |\n| `Pace` | Possessions per 48 minutes | **Key variable** for pace evolution analysis |\n| `3PAr` | 3-Point Attempt Rate (% of FGA from 3PT) | **Primary indicator** of analytics revolution |\n| `TS%` | True Shooting Percentage | Shooting efficiency accounting for FT, 2PT, 3PT |\n| `eFG%` | Effective Field Goal Percentage | Weighted shooting efficiency |\n| `FTr` | Free Throw Attempt Rate | Offensive strategy metric |\n| `ORB%`, `DRB%` | Off/Def Rebound Percentage | Four Factors metrics |\n| `TOV%` | Turnover Percentage | Ball security metric |\n| `Attendance` | Total season attendance | **COVID disruption proxy** |\n\n### Sample Data Illustration\n\n**File**: `data/adv_stats/2023-24_adv_stats.csv` (31 teams × 31 variables)\n\n```\nTeam                     W    L   ORtg  DRtg  Pace  3PAr   TS%\nBoston Celtics*         64   18  123.2 111.6  97.2  .471  .609\nOklahoma City Thunder*  57   25  119.5 112.1  99.8  .383  .608\nMinnesota Timberwolves* 56   26  115.6 109.0  97.1  .384  .594\n```\n\n### Relevance to Project\n\nThis dataset provides the **foundational time series** for:\n\n1. **Long-run analysis (1980-2025)**:  Modeling `ORtg`, `Pace`, and `3PAr` as univariate time series to detect structural breaks using Chow tests and CUSUM statistics\n2. **Analytics revolution dating**: Using `3PAr` time series to objectively identify when the analytics era began (~2012)\n3. **COVID impact quantification**: Analyzing `Attendance` and scoring volatility before/during/after 2020\n4. **VAR modeling**: Examining dynamic relationships between `Pace`, `3PAr`, and `ORtg`\n5. **Granger causality**: Testing whether 3-point volume changes preceded or followed efficiency improvements\n\n**Time Series Variables Extracted**:\n- League-average `ORtg` by season (1980-2025)\n- League-average `Pace` by season (1980-2025)\n- League-average `3PAr` by season (1980-2025)\n- League-average `TS%` by season (1980-2025)\n- Total `Attendance` by season (proxy for COVID disruption)\n\n---\n\n## 2. Basketball Reference: Team Total Statistics (1980-2025)\n\n### Source Information\n- **Primary Source**: [Basketball-Reference.com](https://www.basketball-reference.com/)\n- **Direct URL Pattern**: `https://www.basketball-reference.com/leagues/NBA_[YEAR].html` (same page, different table)\n- **Coverage**: 45 seasons (1980-81 through 2024-25)\n- **Format**: CSV files\n- **Location in Project**: `data/total_stats/[YEAR]_total_stats.csv`\n\n### Extraction Method\n\nSame manual download process as Advanced Stats, but selecting the **\"Team Totals\"** table instead. Downloaded HTML files were converted to CSV format.\n\n### Data Dictionary\n\n**Key Variables** (25 total columns):\n\n| Variable | Description | Relevance |\n|----------|-------------|-----------|\n| `FG`, `FGA` | Field Goals Made/Attempted | Raw shot volume trends |\n| `3P`, `3PA` | 3-Pointers Made/Attempted | **Direct measure of 3PT revolution** |\n| `2P`, `2PA` | 2-Pointers Made/Attempted | Complement to 3PT trends |\n| `FT`, `FTA` | Free Throws Made/Attempted | Offensive strategy evolution |\n| `PTS` | Total Points | Scoring trends over time |\n| `AST`, `TOV` | Assists, Turnovers | Pace and ball movement metrics |\n\n### Sample Data Illustration\n\n**File**: `data/total_stats/2023-24_total_stats.csv` (31 teams × 25 variables)\n\n```\nTeam                     G   FG   FGA   3P   3PA   PTS\nIndiana Pacers*         82 3855  7599 1082  2891 10110\nBoston Celtics*         82 3601  7396 1351  3482  9887\nOklahoma City Thunder*  82 3653  7324 1090  2805  9847\n```\n\n### Relevance to Project\n\nProvides **raw counting statistics** to:\n- Compute custom metrics (e.g., 3PA as % of total FGA)\n- Validate efficiency calculations from advanced stats\n- Analyze absolute changes in shot volume (not just percentages)\n\n**Time Series Variables Extracted**:\n- League total `3PA` by season (1980-2025)\n- League total `FGA` by season (1980-2025)\n- League average `PTS` per game by season\n\n---\n\n## 3. NBA Shot Location Data (2004-2025)\n\n### Source Information\n- **Primary Source**: NBA.com Stats API\n- **GitHub Repository**: [DomSamangy/NBA_Shots_04_25](https://github.com/DomSamangy/NBA_Shots_04_25)\n- **Direct Download**: [Google Drive Link](https://drive.google.com/file/d/1uktZ3wcE5670ZAR5c7MciMHbu8-zPMwM/view?usp=sharing)\n- **Coverage**: 22 seasons (2003-04 through 2024-25 regular season only)\n- **Format**: CSV files (extracted from compressed `.zip` downloads)\n- **Location in Project**: `data/shot_location/NBA_[YEAR]_Shots.csv`\n\n### Extraction Method\n\nThis data was **not collected by me directly**. Instead, I used a publicly available repository that aggregated NBA.com shot location data:\n\n1. **Clone GitHub repository**:\n   ```bash\n   git clone https://github.com/DomSamangy/NBA_Shots_04_25.git\n   ```\n\n2. **Original Data Source**: The repository author extracted data from the NBA.com Stats API endpoint:\n   - API: `https://stats.nba.com/stats/shotchartdetail`\n   - Parameters: `Season`, `TeamID`, `GameID`\n   - Authentication: None required (public API)\n\n3. **Data Processing**:\n   - Downloaded repository contains 22 compressed files (`NBA_2004_Shots.csv.zip` through `NBA_2025_Shots.csv.zip`)\n   - Each ZIP contains a single CSV with all regular season shots (~190k-220k shots per season)\n   - Files were extracted and organized into `data/shot_location/` directory\n\n4. **Reading Code**:\n   ```python\n   import pandas as pd\n\n   # Read extracted CSV directly\n   shots = pd.read_csv('data/shot_location/NBA_2023_Shots.csv')\n\n   # Or read all seasons into single dataframe\n   import glob\n\n   all_shots = []\n   for file in sorted(glob.glob('data/shot_location/NBA_*_Shots.csv')):\n       df = pd.read_csv(file)\n       all_shots.append(df)\n\n   combined_shots = pd.concat(all_shots, ignore_index=True)\n   ```\n\n### Data Dictionary\n\n**Shot-Level Variables** (26 total columns, ~217k rows per season):\n\n| Variable | Description | Relevance to Time-Series Analysis |\n|----------|-------------|-----------------------------------|\n| `SEASON_1`, `SEASON_2` | Season identifiers (e.g., 2023, 2022-23) | Grouping variable |\n| `GAME_DATE` | Date (M-D-Y format) | **Temporal dimension** for daily/weekly aggregation |\n| `TEAM_NAME` | Team name | Aggregation to team-season level |\n| `PLAYER_NAME` | Player name | Optional: player-level trends |\n| `SHOT_MADE` | Boolean (TRUE/FALSE) | Calculate shooting efficiency by zone |\n| `SHOT_TYPE` | 2PT or 3PT Field Goal | Filter for 3PT revolution analysis |\n| `BASIC_ZONE` | **Court zone** classification: | **Critical for spatial analysis** |\n|   | - Restricted Area | High-efficiency paint shots |\n|   | - In the Paint (Non-RA) | Medium-range paint shots |\n|   | - **Midrange** | **Key metric for analytics revolution** |\n|   | - Left/Right Corner 3 | Most efficient 3PT location |\n|   | - Above the Break 3 | Standard 3PT shots |\n| `ZONE_RANGE` | Distance categories (<8ft, 8-16ft, 16-24ft, 24+ft) | Binned distance analysis |\n| `SHOT_DISTANCE` | Distance from basket (feet) | Continuous distance variable |\n| `LOC_X`, `LOC_Y` | Court coordinates (0-50 scale) | Spatial visualization |\n\n### Sample Data Illustration\n\n**File**: `data/shot_location/NBA_2023_Shots.csv` (217,221 shots × 26 variables)\n\n```\nSEASON_1  TEAM_NAME          PLAYER_NAME      SHOT_TYPE  BASIC_ZONE      SHOT_MADE  SHOT_DISTANCE\n2023      Washington Wizards Bradley Beal     3PT        Left Corner 3   TRUE       24.0\n2023      Washington Wizards Kristaps Porzingis 3PT     Above Break 3   FALSE      26.0\n2023      Washington Wizards Monte Morris      2PT       Restricted Area TRUE       1.0\n```\n\n### Relevance to Project\n\nThis **granular spatial data** enables:\n\n1. **\"Death of the Midrange\" quantification**:\n   - Calculate % of shots from `BASIC_ZONE == \"Midrange\"` by season (2004-2025)\n   - Apply structural break tests to identify when mid-range decline accelerated\n   - **Time series variable**: Midrange shot % by season\n\n2. **Zone-specific efficiency evolution**:\n   - Compute eFG% for each `BASIC_ZONE` over time\n   - Test whether efficiency improvements drove strategic changes (Granger causality)\n   - **Time series variables**: Corner 3 eFG%, Midrange eFG%, Paint eFG% by season\n\n3. **Spatial visualization**:\n   - Create shot density heat maps for 2004 vs 2024 (pre/post analytics)\n   - Illustrate \"stretching\" of the court from mid-range to corners + paint\n\n4. **Analytics era validation**:\n   - Correlate shot distance trends with team-level `3PAr` from Basketball Reference\n   - Verify that increased 3PAr reflects actual spatial shot redistribution\n\n**Time Series Variables Extracted**:\n- % of shots from Midrange zone by season (2004-2025)\n- % of shots from Corner 3 zones by season (2004-2025)\n- Average shot distance by season (2004-2025)\n- Shot location variance by season (measure of spatial concentration)\n\n---\n\n## 4. Sports Betting & Media Stock Data (2020-2025)\n\n### Source Information\n\n- **Primary Source**: Yahoo Finance\n- **API Library**: `yfinance` (Python package for Yahoo Finance data)\n- **Documentation**: [yfinance GitHub](https://github.com/ranaroussi/yfinance)\n- **Coverage**:\n  - **DKNG (DraftKings)**: April 23, 2020 - Present\n  - **DIS (Disney/ESPN)**: 1980 - Present\n- **Format**: CSV (saved locally after API download)\n- **Location in Project**: `data/financial/`\n- **Cost**: Free, no API key required\n\n### Selected Tickers\n\n**Primary: DKNG (DraftKings Inc.)**\n- **Symbol**: DKNG (Nasdaq)\n- **IPO Date**: April 23, 2020\n- **Industry**: Sports Betting & Gaming\n- **Relevance**: Went public during COVID-19 pandemic, providing perfect natural experiment for sports industry disruption analysis\n\n**Secondary: DIS (The Walt Disney Company)**\n- **Symbol**: DIS (NYSE)\n- **Established**: Trading since 1957\n- **Industry**: Media & Entertainment (owns ESPN, holds NBA broadcasting rights)\n- **Relevance**: Long-term data (1980+) to correlate with entire NBA evolution; NBA TV deal holder\n\n### Extraction Method\n\nYahoo Finance provides free access to historical stock data via the `yfinance` Python library:\n\n**Step 1: Install yfinance**\n```bash\npip install yfinance\n```\n\n**Step 2: Download Stock Data**\n```python\nimport yfinance as yf\nimport pandas as pd\n\n# Download DraftKings data (COVID-era focus)\ndkng = yf.download('DKNG', start='2020-04-23', end='2025-01-01')\n\n# Download Disney data (long-term analysis)\ndis = yf.download('DIS', start='1980-01-01', end='2025-01-01')\n\n# Save locally for reproducibility\ndkng.to_csv('data/financial/DKNG_daily.csv')\ndis.to_csv('data/financial/DIS_daily.csv')\n```\n\n**Step 3: Calculate Returns and Volatility**\n```python\n# Daily returns\ndkng['Returns'] = dkng['Adj Close'].pct_change()\n\n# Rolling volatility (20-day window)\ndkng['Volatility'] = dkng['Returns'].rolling(window=20).std()\n\n# Cumulative returns\ndkng['Cumulative_Returns'] = (1 + dkng['Returns']).cumprod() - 1\n```\n\n### Data Dictionary\n\n**Raw Variables from Yahoo Finance** (7 columns):\n\n| Variable | Description | Relevance to Time-Series Analysis |\n|----------|-------------|-----------------------------------|\n| `Date` | Trading date | **Time index** for daily time series |\n| `Open` | Opening price | Intraday price dynamics |\n| `High` | Daily high price | Volatility measure |\n| `Low` | Daily low price | Volatility measure |\n| `Close` | Closing price | End-of-day price level |\n| `Adj Close` | Adjusted closing price | **Primary variable** (adjusted for splits/dividends) |\n| `Volume` | Trading volume | Liquidity and market interest |\n\n**Derived Time Series Variables**:\n\n| Variable | Calculation | Use in Analysis |\n|----------|-------------|-----------------|\n| `Daily Returns` | `pct_change(Adj Close)` | **Main dependent variable** for GARCH modeling |\n| `Log Returns` | `log(Close_t / Close_{t-1})` | Continuous returns for ARIMA |\n| `Volatility (20-day)` | `rolling(20).std(Returns)` | Volatility clustering analysis |\n| `Cumulative Returns` | `cumprod(1 + Returns) - 1` | Long-term performance trends |\n\n### Sample Data Illustration\n\n**File**: `DKNG_daily.csv` (1,180 trading days × 7 variables)\n\n```\nDate        Open    High    Low     Close   Adj Close  Volume      Returns\n2020-04-23  19.00   21.28   17.62   18.97   18.97     52458300    NaN\n2020-04-24  20.10   20.70   18.31   18.82   18.82     18584800   -0.0079\n2020-04-27  19.39   19.67   18.20   18.89   18.89     10713600    0.0037\n2020-04-28  19.50   21.36   19.40   20.88   20.88     16344300    0.1053\n...\n2024-12-31  41.23   42.15   40.87   41.85   41.85     8234500     0.0124\n```\n\n**File**: `DIS_daily.csv` (11,340 trading days × 7 variables for 1980-2025)\n\n### Relevance to Project\n\nThis financial data provides the **required financial time-series component** while creating meaningful connections to NBA dynamics:\n\n#### 1. COVID-19 Disruption Analysis\n\n**DKNG as Natural Experiment**:\n- IPO occurred **April 23, 2020** - one month into NBA season suspension\n- Stock price reflects real-time market expectations of sports industry recovery\n- Correlation with NBA attendance recovery (2020-2025)\n\n**Research Questions**:\n- Did DKNG stock react to NBA bubble season announcement (July 2020)?\n- How did stock volatility correlate with attendance volatility?\n- Did return to normal NBA operations (2021-22) reduce DKNG volatility?\n\n#### 2. Seasonality in Financial Markets\n\n**NBA Season Effects on Stock Prices**:\n- Test whether DKNG returns are higher during NBA playoffs (April-June)\n- Examine whether DIS stock shows seasonal patterns tied to NBA Finals viewership\n- Compare volatility during NBA season vs. off-season\n\n**Methods**: SARIMA models, seasonal decomposition (STL), Fourier analysis\n\n#### 3. Long-Term Industry Growth (DIS: 1980-2025)\n\n**Correlation with NBA Evolution**:\n- Did Disney stock benefit from NBA's analytics-era popularity surge?\n- Relationship between league-wide efficiency (ORtg) and media company valuations\n- Impact of major NBA TV deal renewals on DIS stock price\n\n#### 4. Volatility Modeling (GARCH)\n\n**Financial Time-Series Methods**:\n- **GARCH(1,1)** models to capture volatility clustering in DKNG returns\n- Test whether sports disruptions (COVID, lockouts) created structural breaks in volatility\n- Compare GARCH parameters pre/post analytics revolution\n\n#### 5. Cross-Market Analysis (VAR Models)\n\n**Bidirectional Relationships**:\n- Does NBA attendance Granger-cause DKNG stock returns?\n- Do sports betting stock movements predict changes in NBA game pace/strategy?\n\n**Time Series Variables Extracted**:\n- DKNG daily returns (2020-2025): ~1,180 observations\n- DKNG 20-day volatility (2020-2025)\n- DIS daily returns (1980-2025): ~11,000 observations\n- DIS monthly returns aggregated by NBA season\n\n### Integration with NBA Data\n\n**Multi-Source Time Series Framework**:\n\n```\nNBA Data (Annual)          Financial Data (Daily)\n─────────────────          ──────────────────────\nORtg (1980-2025)     ←──→  DIS Returns (1980-2025)\nAttendance (2000-25) ←──→  DKNG Returns (2020-25)\n3PAr (1980-2025)     ←──→  DIS Volatility (long-term trends)\n```\n\n**Analytical Connections**:\n1. **Aggregate financial data to seasonal/annual frequency** to match NBA data\n2. **Use event study methodology** - examine DKNG returns around major NBA announcements\n3. **Correlation analysis** - relationship between attendance and sports betting stock performance\n4. **Lead-lag analysis** - does market anticipate NBA trends before they materialize in stats?\n\n---\n\n## Seasonality and Financial Time Series Coverage\n\n### Seasonality Requirements\n\nThe NBA provides **natural seasonality** across multiple timescales:\n\n1. **Annual Seasonality** (82-game regular season + playoffs):\n   - Regular season: October - April\n   - Playoffs: April - June\n   - Off-season: July - September\n\n2. **Time Series Exhibiting Seasonality**:\n   - **Attendance**: Peaks during playoffs (April-June), drops in off-season (July-September)\n   - **Pace**: May vary by month as teams rest starters late-season\n   - **3PT Attempt Rate**: Potential playoff vs regular season differences\n   - **Stock Returns (DKNG, DIS)**: Sports betting and media stocks show seasonal patterns tied to NBA season\n     - Higher volatility during playoffs\n     - Trading volume spikes around NBA Finals\n     - Earnings announcements coincide with season milestones\n\n3. **Seasonal Decomposition Methods**:\n   - **STL decomposition** of monthly attendance data (2000-2025)\n   - **SARIMA models** for pace and efficiency with annual seasonal component (S=12 for monthly data)\n   - **Fourier analysis** of shot selection patterns within season\n   - **Seasonal dummy variables** for DKNG returns during playoff periods vs regular season\n\n### Financial Time Series Coverage\n\n- **DKNG (DraftKings)**: Daily returns, 2020-04-23 to 2025-01-01 (~1,180 trading days)\n  - Exhibits volatility clustering (GARCH effects)\n  - Natural seasonality tied to NBA/sports calendar\n  - COVID-era natural experiment\n\n- **DIS (Disney/ESPN)**: Daily returns, 1980-01-01 to 2025-01-01 (~11,000 trading days)\n  - Long-term trends correlate with NBA popularity growth\n  - Seasonal patterns from NBA broadcasting schedule\n  - Major TV deal announcements create structural breaks\n\n---\n\n## Data Quality and Limitations\n\n### Strengths\n✓ **Comprehensive temporal coverage**: 45 years team stats, 21 years spatial data\n✓ **Official sources**: Basketball Reference (trusted), NBA.com API (authoritative)\n✓ **Granular detail**: Shot-level data enables precise spatial analysis\n✓ **Fully documented**: All extraction methods and sources provided for replication\n\n### Limitations\n⚠ **Shot location data starts 2004**: Spatial analysis limited to post-2004 era\n  - *Mitigation*: 2004-2025 still captures full analytics revolution (~2012+)\n\n⚠ **Manual data collection**: Basketball Reference lacks API, requires manual download\n  - *Mitigation*: Documented step-by-step process ensures replicability\n\n⚠ **Team-level aggregation only**: No individual player tracking\n  - *Mitigation*: Team-level appropriate for league-wide structural change study\n\n⚠ **DKNG data limited to 2020+**: DraftKings IPO in April 2020 means no pre-COVID baseline\n  - *Mitigation*: Disney (DIS) provides long-term sports media stock perspective (1980+)\n\n---\n\n## File Structure\n\n```\njosh-portfolio/\n│\n└── data/\n    ├── adv_stats/\n    │   ├── 1980-81_adv_stats.csv\n    │   ├── 1981-82_adv_stats.csv\n    │   └── ... (45 CSV files through 2024-25)\n    │\n    ├── total_stats/\n    │   ├── 1980-81_total_stats.csv\n    │   ├── 1981-82_total_stats.csv\n    │   └── ... (45 CSV files through 2024-25)\n    │\n    ├── shot_location/\n    │   ├── NBA_2004_Shots.csv\n    │   ├── NBA_2005_Shots.csv\n    │   └── ... (22 CSV files through 2025)\n    │\n    └── financial/\n        ├── DKNG_daily.csv\n        └── DIS_daily.csv\n```\n\n---\n\n## Replication Instructions\n\nTo fully replicate this data collection:\n\n### 1. Basketball Reference Data (Team Stats)\n\n**Manual Download** (required due to lack of API):\n\n```bash\n# For each season from 1980-81 to 2024-25:\n# 1. Navigate to: https://www.basketball-reference.com/leagues/NBA_[YEAR].html\n# 2. Scroll to \"Team Per Game Stats\" or \"Advanced Stats\" table\n# 3. Click \"Share & Export\" → \"Get table as CSV (for Excel)\"\n# 4. Download the file (may be saved as .xls but contains HTML)\n# 5. Repeat for all 45 seasons for both Advanced and Total stats\n```\n\n**Convert HTML to CSV** (using provided script):\n```python\nimport pandas as pd\nimport glob\n\n# Convert all advanced stats files\nfor xls_file in glob.glob('data/adv_stats/*.xls'):\n    df = pd.read_html(xls_file)[0]\n\n    # Handle multi-level columns if present\n    if isinstance(df.columns, pd.MultiIndex):\n        df.columns = ['_'.join(str(c).strip() for c in col if c)\n                     for col in df.columns.values]\n\n    # Save as CSV\n    csv_file = xls_file.replace('.xls', '.csv')\n    df.to_csv(csv_file, index=False)\n```\n\n**Read CSV files**:\n```python\nimport pandas as pd\nimport glob\n\n# Read single season\ndf_adv = pd.read_csv('data/adv_stats/2023-24_adv_stats.csv')\ndf_total = pd.read_csv('data/total_stats/2023-24_total_stats.csv')\n\n# Read all seasons\nall_adv = []\nfor file in sorted(glob.glob('data/adv_stats/*.csv')):\n    df = pd.read_csv(file)\n    season = file.split('/')[-1].split('_')[0]\n    df['Season'] = season\n    all_adv.append(df)\n\ncombined_adv = pd.concat(all_adv, ignore_index=True)\n```\n\n### 2. Shot Location Data\n\n**Step 1: Download from GitHub**:\n```bash\ngit clone https://github.com/DomSamangy/NBA_Shots_04_25.git\n```\n\n**Step 2: Extract ZIP files to data/shot_location/**:\n```python\nimport zipfile\nimport glob\nimport os\nfrom pathlib import Path\n\n# Create shot_location directory\nPath('data/shot_location').mkdir(parents=True, exist_ok=True)\n\n# Extract all ZIP files\nzip_files = glob.glob('NBA_Shots_04_25-main/NBA_*_Shots.csv.zip')\nfor zip_path in sorted(zip_files):\n    with zipfile.ZipFile(zip_path, 'r') as zip_ref:\n        # Extract CSV to data/shot_location/\n        csv_name = zip_ref.namelist()[0]\n        zip_ref.extract(csv_name, 'data/shot_location/')\n    print(f\"Extracted: {csv_name}\")\n```\n\n**Step 3: Read CSV files**:\n```python\nimport pandas as pd\nimport glob\n\n# Read single season\nshots_2023 = pd.read_csv('data/shot_location/NBA_2023_Shots.csv')\n\n# Read all seasons\nall_shots = []\nfor file in sorted(glob.glob('data/shot_location/NBA_*_Shots.csv')):\n    df = pd.read_csv(file)\n    all_shots.append(df)\n\ncombined_shots = pd.concat(all_shots, ignore_index=True)\n\n# Aggregate to season-level metrics\nmidrange_pct = (shots_2023['BASIC_ZONE'] == 'Midrange').mean() * 100\nprint(f\"2023 Midrange Shot %: {midrange_pct:.2f}%\")\n```\n\n### 3. Financial Data (Yahoo Finance)\n\n**Step 1: Install yfinance**:\n```bash\npip install yfinance\n```\n\n**Step 2: Download and save stock data**:\n```python\nimport yfinance as yf\nimport pandas as pd\nimport os\n\n# Create financial data directory\nos.makedirs('data/financial', exist_ok=True)\n\n# Download DraftKings data (COVID-era analysis)\nprint(\"Downloading DKNG data...\")\ndkng = yf.download('DKNG', start='2020-04-23', end='2025-01-01', progress=False)\ndkng.to_csv('data/financial/DKNG_daily.csv')\nprint(f\"DKNG: {len(dkng)} trading days saved\")\n\n# Download Disney data (long-term analysis)\nprint(\"Downloading DIS data...\")\ndis = yf.download('DIS', start='1980-01-01', end='2025-01-01', progress=False)\ndis.to_csv('data/financial/DIS_daily.csv')\nprint(f\"DIS: {len(dis)} trading days saved\")\n\n# Calculate returns and volatility\ndkng['Returns'] = dkng['Adj Close'].pct_change()\ndkng['Log_Returns'] = np.log(dkng['Adj Close'] / dkng['Adj Close'].shift(1))\ndkng['Volatility_20d'] = dkng['Returns'].rolling(window=20).std()\ndkng['Cumulative_Returns'] = (1 + dkng['Returns']).cumprod() - 1\n\n# Save enhanced version\ndkng.to_csv('data/financial/DKNG_daily_enhanced.csv')\n```\n\n**Step 3: Verify data quality**:\n```python\n# Check for missing values\nprint(f\"DKNG missing values: {dkng.isnull().sum().sum()}\")\n\n# Summary statistics\nprint(\"\\nDKNG Daily Returns Summary:\")\nprint(dkng['Returns'].describe())\n\n# Visualize returns distribution\nimport matplotlib.pyplot as plt\ndkng['Returns'].hist(bins=50, figsize=(10, 6))\nplt.title('DKNG Daily Returns Distribution')\nplt.xlabel('Daily Return')\nplt.ylabel('Frequency')\nplt.savefig('data/financial/DKNG_returns_histogram.png')\n```\n\n---\n\n## Summary: Time Series Inventory\n\n| Dataset | Variables | Coverage | Frequency | Seasonality | Financial |\n|---------|-----------|----------|-----------|-------------|-----------|\n| Basketball Reference Advanced | ORtg, Pace, 3PAr, TS%, Attendance | 1980-2025 | Annual (45 seasons) | ✓ (NBA cycle) | ✗ |\n| Basketball Reference Total | 3PA, FGA, PTS, AST, TOV | 1980-2025 | Annual (45 seasons) | ✓ (NBA cycle) | ✗ |\n| NBA Shot Location | Midrange %, Shot Distance, Zone eFG% | 2004-2025 | Daily→Annual (22 seasons) | ✓ (NBA cycle) | ✗ |\n| **DKNG Stock** | **Daily returns, volatility, volume** | **2020-2025** | **Daily (~1,180 days)** | **✓ (playoff effects)** | **✓** |\n| **DIS Stock** | **Daily returns, volatility, volume** | **1980-2025** | **Daily (~11,000 days)** | **✓ (NBA season)** | **✓** |\n\n**Total Univariate Time Series Available**: 15+ variables (exceeds 3-4 requirement per section)\n\n**Key Time Series for Analysis**:\n1. League-average ORtg (1980-2025): 45 observations\n2. League-average Pace (1980-2025): 45 observations\n3. League-average 3PAr (1980-2025): 45 observations\n4. Midrange shot % (2004-2025): 22 observations\n5. Total Attendance (1980-2025): 45 observations\n6. DKNG daily returns (2020-2025): ~1,180 observations\n7. DIS daily returns (1980-2025): ~11,000 observations\n\nAll data sources, extraction methods, and replication code documented for full transparency.\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"toc-depth":3,"output-file":"data_source.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.55","bibliography":["references.bib"],"csl":"nature.csl","theme":{"light":"sketchy","dark":"slate"},"toggle-theme":true,"page-navigation":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}